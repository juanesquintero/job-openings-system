# Gitlab CI/CD Variables needed for this pipeline

# AWS_ACCESS_KEY_ID
# AWS_SECRET_ACCESS_KEY
# AWS_DEFAULT_REGION

stages:
  - build
  - deploy

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  AWS_KEY: $AWS_ACCESS_KEY_ID
  AWS_SECRET: $AWS_SECRET_ACCESS_KEY
  AWS_REGION: $AWS_DEFAULT_REGION

cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - echo "Starting pipeline..."

lambda-fuction-build:
  stage: build
  image: python:3.12-slim
  script:
    - echo "Building app..."
    - apt-get update -yqq
    - apt-get install zip -yqq
    - >
      pip install --platform manylinux2014_x86_64 -t lib -r requirements.txt --only-binary=:all: --upgrade
    - zip lambda_function.zip -r lib/.
    - zip lambda_function.zip -u $CI_PROJECT_DIR/api/*.py
  artifacts:
    paths:
      - lambda_function.zip
    expire_in: 1 hour

aws-lambda-deploy:
  stage: deploy
  image:
    name: amazon/aws-cli:2.15.19
    entrypoint: ["/bin/bash", "-c"]
  script:
    - echo "Logging into AWS..."
    - rm -rf ~/.aws/configure
    - aws configure set aws_access_key_id $AWS_KEY
    - aws configure set aws_secret_access_key $AWS_SECRET
    - aws configure set default.region $AWS_REGION
    - aws configure set default.output json
    - echo "Deploying to AWS Lambda..."
    - >
      aws lambda update-function-code --function-name sgc-api --zip-file fileb://lambda_function.zip --region $AWS_REGION
  when: manual

.global_rules:
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
